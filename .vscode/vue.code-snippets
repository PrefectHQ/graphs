{
    "component": {
        "scope": "vue",
        "prefix": "vue",
        "body": [
            "<template>",
            "  <div class=\"${TM_FILENAME_BASE/(^[A-Z][a-z]*|[a-z])([A-Z])?/${1:/downcase}${2:+-}${2:/downcase}/g}\">",
                "",
                "  </div>",
                "</template>",
                "",
                "<script lang=\"ts\" setup>",
                "  defineProps<{",
                "    ${1}",
                "  }>()",
                "</script>",
                "",
                "<style>",
                "",
                "</style>"
            ],
        "description": "Typescript Setup Component"
    },
    "vue-demo": {
        "scope": "vue",
        "prefix": "vue-demo",
        "body": [
            "<template>",
            "  <ComponentPage title=\"${TM_FILENAME_BASE/(^[A-Z][a-z]*|[a-z])([A-Z])?/${1}${2:+ }${2}/g}\" :demos=\"[{ title: '${TM_FILENAME_BASE/(^[A-Z][a-z]*|[a-z])([A-Z])?/${1}${2:+ }${2}/g}' }]\">",
            "    <template #description>",
            "      This is where we add a short description of <p-code>p-${TM_FILENAME_BASE/(^[A-Z][a-z]*|[a-z])([A-Z])?/${1:/downcase}${2:+-}${2:/downcase}/g}</p-code>. Describe the components intent, not hyper specific documentation that belongs on vitepress page.",
            "    </template>",
            "",
            "    <template #${TM_FILENAME_BASE/(^[A-Z][a-z]*|[a-z])([A-Z])?/${1:/downcase}${2:+-}${2:/downcase}/g}>",
            "      $1",
            "    </template>",
            "  </ComponentPage>",
            "</template>",
            "",
            "<script lang=\"ts\" setup>",
            "  import ComponentPage from '@/demo/components/ComponentPage.vue'",
            "</script>"
        ],
        "description": "vue-demo"
    },
    "vue-demo-with-state": {
        "scope": "vue",
        "prefix": "vue-demo-state",
        "body": [
            "<template>",
            "  <ComponentPage title=\"${TM_FILENAME_BASE/(^[A-Z][a-z]*|[a-z])([A-Z])?/${1}${2:+ }${2}/g}\" :demos=\"[{ title: '${TM_FILENAME_BASE/(^[A-Z][a-z]*|[a-z])([A-Z])?/${1}${2:+ }${2}/g}' }]\">",
            "    <template #description>",
            "      This is where we add a short description of <p-code>p-${TM_FILENAME_BASE/(^[A-Z][a-z]*|[a-z])([A-Z])?/${1:/downcase}${2:+-}${2:/downcase}/g}</p-code>. Describe the components intent, not hyper specific documentation that belongs on vitepress page.",
            "",
            "      <DemoState v-model:state=\"exampleState\" v-model:disabled=\"disabled\" />",
            "    </template>",
            "",
            "    <template #${TM_FILENAME_BASE/(^[A-Z][a-z]*|[a-z])([A-Z])?/${1:/downcase}${2:+-}${2:/downcase}/g}>",
            "      $1",
            "    </template>",
            "  </ComponentPage>",
            "</template>",
            "",
            "<script lang=\"ts\" setup>",
            "  import { State } from '@/types'",
            "  import { ref } from 'vue'",
            "  import ComponentPage from '@/demo/components/ComponentPage.vue'",
            "  import DemoState from '@/demo/components/DemoState.vue'",
            "",
            "  const exampleState = ref<State>()",
            "  const disabled = ref(false)",
            "</script>"
        ],
        "description": "vue-demo"
    },
    "template": {
        "scope": "vue",
        "prefix": "template",
        "body": [
            "<template>",
            "  $1",
            "</template>"
        ],
        "description": "Create <template> block"
    },
    "script": {
        "scope": "vue",
        "prefix": "script",
        "body": [
            "<script lang=\"ts\">",
            "export default {",
            "  name: '$1',",
            "  expose: [],",
            "  $2",
            "};",
            "</script>"
        ],
        "description": "Create <script> block"
    },
    "script setup": {
        "scope": "vue",
        "prefix": "script",
        "body": [
          "<script lang=\"ts\" setup>",
          "  defineProps<{",
          "    $1",
          "  }>()",
          "</script>"
        ],
        "description": "Typescript setup"
    },
    "style": {
        "scope": "vue",
        "prefix": "style",
        "body": [
            "<style>",
            "$1",
            "</style>"
        ],
        "description": "Create <style> block"
    },
    "v-for": {
        "scope": "html",
        "prefix": "v-for",
        "body": [
            "<template v-for=\"$1 in $2\">",
            "  $3",
            "</template>"
        ],
        "description": "Create html tag with v-for"
    },
    "v-if": {
        "scope": "html",
        "prefix": "v-if",
        "body": [
            "<template v-if=\"$1\">",
            "  $2",
            "</template>"
        ],
        "description": "Create html tag with v-if"
    },
    "v-else-if": {
        "scope": "html",
        "prefix": "v-else-if",
        "body": [
            "<template v-else-if=\"$1\">",
            "  $2",
            "</template>"
        ],
        "description": "Create html tag with v-else-if"
    },
    "v-else": {
        "scope": "html",
        "prefix": "v-else",
        "body": [
            "<template v-else>",
            "  $2",
            "</template>"
        ],
        "description": "Create html tag with v-else"
    }
}